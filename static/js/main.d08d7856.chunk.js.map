{"version":3,"sources":["assets/images/user.jpg","redux/dialogs-reducer.ts","components/Sidebar/Nav/Navbar.module.css","components/Sidebar/Sidebar.module.css","components/Sidebar/Friends/Friend/Friend.module.css","components/Login/Login.module.css","api/api.js","reportWebVitals.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Sidebar/Nav/Navbar.jsx","components/Sidebar/Friends/Friend/Friend.jsx","components/Sidebar/Friends/Friends.jsx","components/Sidebar/Sidebar.jsx","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.jsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","assets/images/logo.png","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","App.js","index.js","components/common/FormsContrls/FormsControls.js","components/common/FormsContrls/FormsControls.module.css","assets/images/preloader.gif","components/common/Preloader/Preloader.js","components/Users/Users.module.css","utils/validators/validators.js","components/Sidebar/Friends/Friends.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","unfollowUser","userId","delete","followUser","post","profileAPI","getUserProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profileData","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","Music","Settings","Navbar","className","s","nav","item","to","activeClassName","active","Friend","src","alt","Friends","wrapper","header","content","Sidebar","sidebar","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleFollowingInProgress","usersReducer","map","u","followed","filter","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","styles","paginator","onClick","p","index","cn","selectedPage","pageNumber","e","User","user","follow","unfollow","photos","small","userPhoto","disabled","some","Users","props","usersWrapper","createSelector","userPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","pageTitle","Preloader","React","Component","compose","connect","dispatch","a","data","resultCode","page","response","items","totalCount","Header","logo","loginBlock","isAuth","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","checkAuthorised","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","placeholder","validate","required","error","style","formSummaryError","length","stopSubmit","_error","INITIALIZING_SUCCESS","initialized","appReducer","sidebarReducer","store","createStore","require","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunkMiddleware","__store__","ProfileContainer","lazy","DialogsContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","fallback","path","render","exact","AppContainer","promise","Promise","all","SocialNetworkApp","StrictMode","ReactDOM","document","getElementById","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","createField","validators","text","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","profile","newPostText","addPostCreator","setStatus","file","reject","newPost","postId"],"mappings":"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","file":"static/js/main.d08d7856.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.30a11b1f.jpg\";","const SEND_MESSAGE = 'social-network/dialogs/SEND-MESSAGE';\r\n\r\ntype DialogType = {\r\n  id: number\r\n  name: string\r\n}\r\ntype MessageType = {\r\n  id: number\r\n  message: string\r\n}\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Shyam Rupa' },\r\n    { id: 2, name: 'Vasliy' },\r\n    { id: 3, name: 'Uncle Gena' },\r\n    { id: 4, name: 'Валера' },\r\n    { id: 5, name: 'Иван Викторович' },\r\n  ] as Array<DialogType>,\r\n  messages: [\r\n    { id: 1, message: 'Hello' },\r\n    { id: 2, message: 'What\\' s up?' },\r\n    { id: 3, message: 'Merhaba' },\r\n    { id: 4, message: 'Namaste!' },\r\n    { id: 5, message: 'Hari-bol!' },\r\n  ] as Array<MessageType>,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: body }],\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype SendMessageCreatorActionType = {\r\n  type: typeof SEND_MESSAGE\r\n  newMessageBody: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody\r\n})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3CEd7\",\"item\":\"Navbar_item__2UnZK\",\"active\":\"Navbar_active__1lp_t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2Z7A9\",\"item\":\"Sidebar_item__3js7J\",\"active\":\"Sidebar_active__7cFzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__2I8qH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3QaUD\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '91cc1011-293a-4a6f-955d-371d85cc4175'\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profileData) {\r\nreturn instance.put('/profile', profileData)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","const Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","const Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import s from './Friend.module.css';\r\n\r\nconst Friend = () => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://hypeava.ru/uploads/posts/2018-05/1527186681_1.jpg\" alt=\"Ava\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friend;","import s from './Friends.module.css';\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.header}>\r\n        Friends:\r\n      </div>\r\n      <div className={s.content}>\r\n        <Friend/>\r\n        <Friend/>\r\n        <Friend/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends;","import s from './Sidebar.module.css';\r\nimport Navbar from \"./Nav/Navbar\";\r\nimport Friends from \"./Friends/Friends\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className={s.sidebar}>\r\n      <Navbar/>\r\n      <Friends/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import { userAPI } from '../api/api';\r\nimport { UserType } from '../types/type';\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'social-network/users/TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nconst initialState = {\r\n  users: [] as Array<UserType>, //array of users ids\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n\r\n    case SET_USERS:\r\n      return { ...state, users: action.users }\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.currentPage }\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return { ...state, totalUsersCount: action.count }\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return { ...state, isFetching: action.isFetching }\r\n\r\n    case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype FollowSuccessActionType = {\r\n  type: typeof FOLLOW\r\n  userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({ type: FOLLOW, userId })\r\ntype UnfollowSuccessActionType = {\r\n  type: typeof UNFOLLOW\r\n  userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({ type: UNFOLLOW, userId })\r\ntype SetUsersActionType = {\r\n  type: typeof SET_USERS\r\n  users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({ type: SET_USERS, users })\r\ntype SetCurrentPageActionType = {\r\n  type: typeof SET_CURRENT_PAGE\r\n  currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage\r\n})\r\ntype SetTotalUsersCountActionType = {\r\n  type: typeof SET_TOTAL_USERS_COUNT\r\n  count: number\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount\r\n})\r\ntype ToggleIsFetchingActionType = {\r\n  type: typeof TOGGLE_IS_FETCHING\r\n  isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching: isFetching\r\n})\r\ntype ToggleFollowingInProgressActionType = {\r\n  type: typeof TOGGLE_FOLLOWING_IN_PROGRESS\r\n  isFetching: boolean\r\n  userId: number\r\n}\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number): ToggleFollowingInProgressActionType => ({\r\n  type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n  isFetching: isFetching,\r\n  userId\r\n})\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n  return async (dispatch: any) => {\r\n\r\n    dispatch(setCurrentPage(page));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    let response = await userAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount));\r\n  }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    let response = await userAPI.followUser(userId)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(followSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    let response = await userAPI.unfollowUser(userId)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(unfollowSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n  }\r\n}\r\n\r\n\r\nexport default usersReducer;","import styles from './Paginator.module.css';\r\nimport React from 'react';\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  currentPage: number\r\n}\r\nconst Paginator: React.FC<PropsType> = ({\r\n                                          totalUsersCount,\r\n                                          pageSize,\r\n                                          onPageChanged,\r\n                                          currentPage\r\n                                        }) => {\r\n\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n  let pages: Array<number> = [];\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  return <div className={styles.paginator}>\r\n\r\n    <span onClick={() => {\r\n      onPageChanged(1)\r\n    }}>First </span>\r\n\r\n    <span onClick={() => {\r\n      if (currentPage > 1) {\r\n        onPageChanged(currentPage - 1);\r\n      }\r\n    }}>Prev. </span>\r\n\r\n    {pages.map((p, index) => {\r\n      if ((currentPage - p) < 2 && (p - currentPage) < 2) {\r\n        // return <span key={index} className={props.currentPage === p ? styles.selectedPage : undefined}\r\n        return <span key={index} className={cn({\r\n          [styles.selectedPage]: currentPage === p\r\n        }, styles.pageNumber)}\r\n                     onClick={(e) => {\r\n                       onPageChanged(p)\r\n                     }}>{p + ' '}\r\n          </span>\r\n      }\r\n    })}\r\n    <span onClick={() => {\r\n      if (currentPage < pagesCount) {\r\n        onPageChanged(currentPage + 1);\r\n      }\r\n\r\n    }}>Next </span>\r\n    <span onClick={() => {\r\n      onPageChanged(pagesCount);\r\n    }}>Last</span>\r\n  </div>\r\n}\r\n\r\nexport default Paginator;","import styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n\r\n    return (\r\n        <div>\r\n          <span>\r\n            <div>\r\n              <NavLink to={'/profile/' + user.id}>\r\n                  <img src={user.photos.small || userPhoto} className={styles.userPhoto}\r\n                       alt=\"Some img\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n              {user.followed\r\n                  ? <button disabled={followingInProgress\r\n                      .some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>\r\n                      Unfollow</button>\r\n                  : <button disabled={followingInProgress\r\n                      .some(id => id === user.id)} onClick={() => {\r\n                      follow(user.id);\r\n                  }}>\r\n                      Follow</button>}\r\n            </div>\r\n          </span>\r\n            <span>\r\n            <span>\r\n              <div>\r\n                {user.name}\r\n              </div>\r\n              <div>\r\n                {user.status}\r\n              </div>\r\n            </span>\r\n            <span>\r\n              <div>{\"u.location.country\"}</div>\r\n              <div>{\"u.location.city\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import styles from './Users.module.css';\r\nimport React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\nimport { UserType } from '../../types/type';\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n  follow: () => void\r\n  unfollow: () => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = ({\r\n                                    onPageChanged,\r\n                                    totalUsersCount,\r\n                                    pageSize,\r\n                                    currentPage,\r\n                                    users,\r\n                                    ...props\r\n                                  }) => {\r\n\r\n  return <div className={styles.wrapper}>\r\n    <Paginator onPageChanged={onPageChanged}\r\n               totalUsersCount={totalUsersCount}\r\n               pageSize={pageSize}\r\n               currentPage={currentPage}/>\r\n    <div className={styles.usersWrapper}>\r\n      {\r\n        users.map(u => <User key={u.id}\r\n                                   user={u}\r\n                                   followingInProgress={props.followingInProgress}\r\n                                   unfollow={props.unfollow}\r\n                                   follow={props.follow}/>\r\n        )\r\n      }\r\n    </div>\r\n    <Paginator onPageChanged={onPageChanged}\r\n               totalUsersCount={totalUsersCount}\r\n               pageSize={pageSize}\r\n               currentPage={currentPage}/>\r\n  </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from 'reselect';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n  return state.userPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.userPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.userPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.userPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.userPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.userPage.followingInProgress;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  follow, requestUsers, setCurrentPage, setTotalUsersCount,\r\n  setUsers, toggleIsFetching, unfollow,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount, getUsers,\r\n} from '../../redux/users-selectors';\r\nimport { UserType } from '../../types/type';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n  currentPage: number\r\n  pageSize: number\r\n  isFetching: boolean\r\n  totalUsersCount: number\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n  follow: any\r\n  unfollow: any\r\n  setUsers: any\r\n  setCurrentPage: any\r\n  setTotalUsersCount: any\r\n  toggleIsFetching: any\r\n  requestUsers: any\r\n}\r\n\r\ntype OwnPropsType = {\r\n  pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    const { pageSize } = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      <h2>{this.props.pageTitle}</h2>\r\n      {this.props.isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             follow={this.props.follow}\r\n             unfollow={this.props.unfollow}\r\n             followingInProgress={this.props.followingInProgress}/>\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n      follow, unfollow, setUsers,\r\n      setCurrentPage, setTotalUsersCount, toggleIsFetching, getUsers: requestUsers\r\n    })\r\n)(UsersContainer)","export default __webpack_public_path__ + \"static/media/logo.a65ceb6c.png\";","import s from './Header.module.css';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <NavLink to={'/'}><img src={logo} alt='Logo'/></NavLink>\r\n      <div className={s.loginBlock}>\r\n        { props.isAuth\r\n          ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_AUTH_USER_DATA = 'social-network/auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'social-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nexport type InitialStateType2 = {\r\n  id: number | null,\r\n  login: string | null,\r\n  email: string | null,\r\n  isAuth: boolean,\r\n  isFetching: boolean,\r\n  captchaUrl: string | null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  id: null as number | null,\r\n  login: null as string | null,\r\n  email: null as string | null,\r\n  isAuth: false,\r\n  isFetching: false,\r\n  captchaUrl: null as string | null\r\n};\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype setAuthUserDataActionPayloadType = {\r\n  id: number | null\r\n  login: string | null\r\n  email: string | null\r\n  isAuth: boolean\r\n}\r\n\r\ntype setAuthUserDataActionType = {\r\n  type: typeof SET_AUTH_USER_DATA\r\n  payload: setAuthUserDataActionPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean): setAuthUserDataActionType => ({\r\n  type: SET_AUTH_USER_DATA, payload:\r\n    { id, login, email, isAuth }\r\n});\r\n\r\ntype GetCaptchaUrlSuccessActionType = {\r\n  type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n  payload: { captchaUrl: string }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl }\r\n});\r\n\r\nexport const checkAuthorised = () => async (dispatch: any) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, login, email, true));\r\n  }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n  const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(checkAuthorised());\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    let message = response.data.messages.length > 0 ? response.data.messages : 'Some error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url;\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n  let response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport default authReducer;","import Header from \"./Header\";\r\nimport React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, logout})(HeaderContainer);","import style from '../common/FormsContrls/FormsControls.module.css'\r\nimport s from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsContrls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div><Field component={Input} name='email' placeholder='Email'\r\n                    validate={required}/></div>\r\n        <div><Field component={Input} name='password' placeholder='Пароль' type='password'\r\n                    validate={required}/></div>\r\n        <div><Field component={Input} name='rememberMe' type='checkbox'/>Запомнить меня</div>\r\n        {props.error && <span className={style.formSummaryError}>{props.error}</span>}\r\n\r\n        <div>\r\n          <button>Войти</button>\r\n        </div>\r\n        {props.captchaUrl &&\r\n        <div>\r\n          <div>Введите символы с картинки</div>\r\n          <img src={props.captchaUrl} alt={'captcha'}/>\r\n          <div><Field component={Input} name='captcha' placeholder='Введите символы'\r\n                      validate={required}/></div>\r\n        </div>\r\n        }\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return <div className={s.wrapper}>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { checkAuthorised } from './auth-reducer';\r\n\r\nconst INITIALIZING_SUCCESS = 'social-network/app/INITIALIZING_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n  initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case INITIALIZING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype InitializingSuccessActionType = {\r\n  type: typeof INITIALIZING_SUCCESS\r\n}\r\n\r\nexport const initializingSuccess = (): InitializingSuccessActionType => ({ type: INITIALIZING_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n  let promise = dispatch(checkAuthorised());\r\n\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializingSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","const initialState = {};\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { applyMiddleware, combineReducers, compose } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\nconst { createStore } = require('redux');\r\n\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  userPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import './App.css';\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport React, { Component, Suspense } from \"react\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends Component {\r\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n    alert('Произошла ошибка!');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Sidebar/>\r\n        <div className='app-wrapper-content'>\r\n          {/*<Switch>*/}\r\n          <Suspense fallback={<Preloader />}>\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer /> } />\r\n            <Route path='/dialogs' render={() => <DialogsContainer />}/>\r\n          </Suspense>\r\n          <Route exact path='/' render={() => <Redirect to={'/profile'} />} />\r\n          <Route path='/users' render={() => <UsersContainer pageTitle={'My social network'} />} />\r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/music' render={() => <Music />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n          <Route path='/login' render={() => <LoginPage />} />\r\n          {/*<Route path='*' render={() => <div>404 - PAGE NOT FOUND</div>} />*/}\r\n          {/*</Switch>*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\n\r\nconst SocialNetworkApp = () => {\r\n  return <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <AppContainer/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>\r\n}\r\n\r\nexport default SocialNetworkApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport SocialNetworkApp from \"./App\";\r\n\r\nReactDOM.render(<SocialNetworkApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","import styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError =  meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError && styles.error)}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validators={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3K4IF\",\"error\":\"FormsControls_error__2Zrga\",\"formSummaryError\":\"FormsControls_formSummaryError__1_J3E\"};","export default __webpack_public_path__ + \"static/media/preloader.d5566c27.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n  return <img src={preloader}/>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2DnJU\",\"wrapper\":\"Users_wrapper__1qq-B\",\"usersWrapper\":\"Users_usersWrapper__NmYSr\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__PUQdO\",\"content\":\"Friends_content__2FhxB\",\"header\":\"Friends_header__1MXzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2XwMp\",\"pageNumber\":\"Paginator_pageNumber__34BUw\",\"paginator\":\"Paginator_paginator__2yKf6\",\"content\":\"Paginator_content__3yAap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__7AGEp\",\"loginBlock\":\"Header_loginBlock__1r6zJ\"};","import { profileAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { PhotosType, PostType, ProfileType } from '../types/type';\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'social-network/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'social-network/profile/SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Привет, мир!', likesCount: 5 },\r\n    { id: 2, message: 'Ом намо бхагавате васудевайа!', likesCount: 108 },\r\n    { id: 3, message: 'Какой-нибудь еще пост', likesCount: 1108 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '',\r\n  newPostText: ''\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 4,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: ''\r\n      };\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return { ...state, profile: action.profile }\r\n\r\n    case DELETE_POST:\r\n      return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n\r\n    case SAVE_PHOTO_SUCCESS:\r\n      return { ...state, profile: { ...state.profile, photos: action.photos } as ProfileType }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AddPostCreatorActionType = {\r\n  type: typeof ADD_POST,\r\n  newPostText: string\r\n}\r\nexport const addPostCreator = (newPostText: string): AddPostCreatorActionType => ({ type: ADD_POST, newPostText })\r\ntype SetUserProfileActionType = {\r\n  type: typeof SET_USER_PROFILE,\r\n  profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({ type: SET_USER_PROFILE, profile })\r\ntype SetStatusActionType = {\r\n  type: typeof SET_STATUS,\r\n  status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusActionType => ({ type: SET_STATUS, status })\r\ntype DeletePostActionType = {\r\n  type: typeof DELETE_POST,\r\n  postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({ type: DELETE_POST, postId })\r\ntype SavePhotoSuccessActionType = {\r\n  type: typeof SAVE_PHOTO_SUCCESS,\r\n  photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({\r\n  type: SAVE_PHOTO_SUCCESS,\r\n  photos\r\n})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n  let response = await profileAPI.getUserProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n  try {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setStatus(status));\r\n    }\r\n  } catch (error) {\r\n    alert(`Произошла ошибка:\\n\r\n        ${error}`)\r\n  }\r\n\r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n  let response = await profileAPI.savePhoto(file);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any) => {\r\n  let response = await profileAPI.saveProfile(profile);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(profile.userId));\r\n  } else {\r\n    dispatch(stopSubmit('edit-profile', { _error: response.data.messages[0] }));\r\n    return Promise.reject(response.data.messages[0]);\r\n  }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}