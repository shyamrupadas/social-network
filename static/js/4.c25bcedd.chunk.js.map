{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","msg","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,sFCa/HC,EAXI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,U,gBCEjBC,EAPC,SAACT,GAEf,OACE,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMW,O,kCCwBhCC,EAAcC,YAAiB,IAY/BC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAVL,SAACf,GACnB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BAAK,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAY,2GAAsBd,KAAK,iBAC5De,SAAU,CAACC,IAAUZ,OACjC,8BAAK,qGAOIa,EApCC,SAACzB,GACf,IAAM0B,EAAkB1B,EAAM2B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBN,GAAI4B,EAAE5B,IAAZ4B,EAAE5B,OACtF6B,EAAmB/B,EAAM2B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,IAAKsB,EAAEvB,SAAcuB,EAAE/B,OAM7F,OAEE,sBAAKC,UAAWC,IAAEwB,QAAlB,UACE,qBAAKzB,UAAWC,IAAE8B,aAAlB,SACGR,IAEH,sBAAKvB,UAAWC,IAAE4B,SAAlB,UACGD,EACD,cAACjB,EAAD,CAAkBG,SAXF,SAACkB,GACrBnC,EAAMoC,YAAYD,EAAOE,0B,uDCVvBC,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,KAAKD,S,OCeNE,4BACbC,aAfsB,SAACJ,GACvB,MAAO,CACLZ,YAAaY,EAAMZ,gBAII,SAACiB,GAC1B,MAAO,CACLR,YAAa,SAACC,GACZO,EAASC,YAAmBR,UDPF,SAACS,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAKC,KAAKhD,MAAMwC,OACT,cAACM,EAAD,eAAeE,KAAKhD,QADI,cAAC,IAAD,CAAUO,GAAG,eAJH,GAEb0C,IAAMH,WAStC,OAFqCH,YAAQL,EAARK,CAAoCI,KCG5DL,CAGbjB","file":"static/js/4.c25bcedd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Kj-c\",\"dialogsItems\":\"Dialogs_dialogsItems__zU1si\",\"active\":\"Dialogs_active__1g7dn\",\"messages\":\"Dialogs_messages__1pw2t\"};","import s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css'\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n  return (\r\n    <div className={s.message}>{props.msg}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Messages/Message\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsContrls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n  const messagesElements = props.dialogsPage.messages.map(m => <Message msg={m.message} key={m.id}/>);\r\n\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n  return (\r\n\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n        <DialogsReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div><Field component={Textarea} placeholder='Напишите сообщение!' name='newMessageBody'\r\n                  validate={[required, maxLength50]} /></div>\r\n      <div><button>Отправить!</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'dialogs'})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}