{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","userPhoto","mainPhoto","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","Preloader","Post","c","item","alt","message","likesCount","MyPosts","React","memo","postsElements","profilePage","posts","map","p","id","postsBlock","MyPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizerUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,iC,oBCAvFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,yICGV,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,WIoCvFC,EAvCgB,SAACC,GAE9B,QAA8BC,oBAAS,GAAvC,GAAKC,EAAL,KAAeC,EAAf,KACA,IAA0BF,mBAASD,EAAMI,QAAzC,GAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACRD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAeP,OACC,iCACKF,GACD,8BACE,sBAAMK,cAjBS,WACvBJ,GAAY,IAgBJ,SAAwCH,EAAMI,QAAU,+GAG1DF,GACA,8BACE,uBAAOM,SAbM,SAACC,GACtBJ,EAAUI,EAAEC,cAAchB,QAYeiB,OAlBhB,WACzBR,GAAY,GACZH,EAAMY,aAAaR,IAgBkDS,WAAW,EACjEnB,MAAOU,U,SCWXU,EAxCK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,OAAQQ,EAAkB,EAAlBA,aAErC,OAAKG,EAKH,8BACE,sBAAKC,UAAWC,IAAEC,iBAAlB,UACE,qBAAKC,IAAKJ,EAAQK,OAAOC,OAASC,IAAWN,UAAWC,IAAEM,YAC1D,cAAC,EAAD,CAAwBnB,OAAQA,EAAQQ,aAAcA,IACtD,8BACE,6BAAKG,EAAQS,aAEf,8BACE,wEAAaT,EAAQU,aAEvB,8BACE,2FAA2C,IAA3BV,EAAQW,eAA0B,eAAO,0BAEzD,8BACE,yFAAeX,EAAQY,2BAA6BZ,EAAQY,+BAEhE,gCACE,kFACCZ,EAAQa,SAASC,UAAY,2CAAcd,EAAQa,SAASC,YAC5Dd,EAAQa,SAASE,QAAU,yCAAYf,EAAQa,SAASE,UACxDf,EAAQa,SAASG,WAAa,4CAAehB,EAAQa,SAASG,aAC9DhB,EAAQa,SAASI,UAAY,2CAAcjB,EAAQa,SAASI,YAC5DjB,EAAQa,SAASK,SAAW,0CAAalB,EAAQa,SAASK,WAC1DlB,EAAQa,SAASM,IAAM,qCAAQnB,EAAQa,SAASM,MAChDnB,EAAQa,SAASO,SAAW,0CAAapB,EAAQa,SAASO,WAC1DpB,EAAQa,SAASQ,SAAW,0CAAarB,EAAQa,SAASQ,mBA7B1D,cAACC,EAAA,EAAD,K,4CCMIC,EAZF,SAACtC,GACZ,OACE,sBAAKgB,UAAWuB,IAAEC,KAAlB,UACE,qBAAKrB,IAAI,4DAA4DsB,IAAI,QACxEzC,EAAM0C,QACP,8BACE,iCAAO1C,EAAM2C,WAAb,iB,kCCDFC,EAAUC,IAAMC,MAAK,SAAA9C,GACzB,IAAM+C,EAAgB/C,EAAMgD,YAAYC,MAAMC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMT,QAASS,EAAET,QACXC,WAAYQ,EAAER,YADWQ,EAAEC,OAOxF,OACE,sBAAKpC,UAAWC,IAAEoC,WAAlB,UACE,0CACA,cAACC,EAAD,CAAiBC,SAPF,SAACC,GAClBxD,EAAMyD,QAAQD,EAAOE,gBAOnB,qBAAK1C,UAAWC,IAAEgC,MAAlB,SACGF,UAMHY,EAAcC,YAAiB,IAgB/BN,EAAkBO,YAAU,CAACC,KAAM,yBAAjBD,EAdL,SAAC7D,GAClB,OACE,uBAAMuD,SAAUvD,EAAM+D,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,cAAcC,YAAY,yEAC3DC,SAAU,CAACC,IAAUX,OAEvB,8BACE,mIAQOf,I,QCxBA2B,EAFUC,aAdD,SAACC,GACvB,MAAO,CACLzB,YAAayB,EAAMzB,gBAII,SAAC0B,GAC1B,MAAO,CACLjB,QAAS,SAACC,GACRgB,EAASC,YAAejB,QAKLc,CAA6C5B,GCJvDgC,EAVC,SAAC5E,GAEf,OACE,gCACE,cAAC,EAAD,CAAae,QAASf,EAAMe,QAASX,OAAQJ,EAAMI,OAAQQ,aAAcZ,EAAMY,eAC/E,cAAC,EAAD,Q,eCFAiE,E,uKAEJ,WAEE,IAAIC,EAASC,KAAK/E,MAAMgF,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAK/E,MAAMkF,mBAEnBH,KAAK/E,MAAMmF,QAAQ1F,KAAK,UAG3BsF,KAAK/E,MAAMoF,eAAeN,GAC1BC,KAAK/E,MAAMqF,UAAUP,K,oBAGvB,WACE,OACE,cAAC,EAAD,eAAaC,KAAK/E,Y,GAjBO6C,IAAMyC,WA6BtBC,4BACbf,aARsB,SAACC,GAAD,MAAY,CAClC1D,QAAS0D,EAAMzB,YAAYjC,QAC3BX,OAAQqE,EAAMzB,YAAY5C,OAC1B8E,iBAAkBT,EAAMe,KAAKpC,GAC7BqC,OAAQhB,EAAMe,KAAKC,UAIM,CAACL,mBAAgBC,cAAWzE,mBACrD8E,IAFaH,CAGbV","file":"static/js/3.430fa14f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3lTQK\",\"mainPhoto\":\"ProfileInfo_mainPhoto__c2jC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__RkeIZ\",\"posts\":\"MyPosts_posts__VqHTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__F-bai\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n     return (\r\n      <div>\r\n        { !editMode &&\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || 'Напишите что-нибудь'}</span>\r\n          </div>\r\n        }\r\n        { editMode &&\r\n          <div>\r\n            <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                   value={status}/>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        <div>\r\n          <h3>{profile.fullName}</h3>\r\n        </div>\r\n        <div>\r\n          <p>Обо мне: {profile.aboutMe}</p>\r\n        </div>\r\n        <div>\r\n          <p>Ищу работу: {profile.lookingForAJob === true ? 'Да' : 'Нет'}</p>\r\n        </div>\r\n          <div>\r\n            <p>Подробнее: {profile.lookingForAJobDescription && profile.lookingForAJobDescription}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Контакты</h3>\r\n          {profile.contacts.facebook && <p>facebook: {profile.contacts.facebook}</p>}\r\n          {profile.contacts.github && <p>github: {profile.contacts.github}</p>}\r\n          {profile.contacts.instagram && <p>instagram: {profile.contacts.instagram}</p>}\r\n          {profile.contacts.mainLink && <p>mainLink: {profile.contacts.mainLink}</p>}\r\n          {profile.contacts.twitter && <p>twitter: {profile.contacts.twitter}</p>}\r\n          {profile.contacts.vk && <p>vk: {profile.contacts.vk}</p>}\r\n          {profile.contacts.website && <p>website: {profile.contacts.website}</p>}\r\n          {profile.contacts.youtube && <p>youtube: {profile.contacts.youtube}</p>}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import c from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={c.item}>\r\n      <img src=\"https://hypeava.ru/uploads/posts/2018-05/1527186681_1.jpg\" alt=\"Ava\"/>\r\n      {props.message}\r\n      <div>\r\n        <span>{props.likesCount} like</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsContrls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  const postsElements = props.profilePage.posts.map(p => <Post message={p.message} key={p.id}\r\n                                                               likesCount={p.likesCount}/>);\r\n\r\n  const addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostReduxForm onSubmit={addNewPost}/>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' placeholder='Как у вас дела?'\r\n        validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Добавить запись</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(MyPostForm)\r\n\r\nexport default MyPosts;","import {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizerUserId;\r\n      if (!userId) {\r\n       this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizerUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}