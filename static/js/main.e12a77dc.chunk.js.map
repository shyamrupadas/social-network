{"version":3,"sources":["assets/images/user.jpg","api/api.ts","redux/dialogs-reducer.ts","components/Sidebar/Sidebar.module.css","components/Sidebar/Friends/Friend/Friend.module.css","components/Login/Login.module.css","components/Sidebar/Nav/Navbar.module.css","components/common/FormsContrls/FormsControls.tsx","reportWebVitals.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Sidebar/Nav/Navbar.jsx","components/Sidebar/Friends/Friend/Friend.jsx","components/Sidebar/Friends/Friends.jsx","components/Sidebar/Sidebar.jsx","api/users-api.ts","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.jsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","assets/images/logo.png","components/Header/Header.jsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.tsx","components/Header/HeaderContainer.jsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","App.js","index.js","components/common/FormsContrls/FormsControls.module.css","assets/images/preloader.gif","components/common/Preloader/Preloader.js","components/Users/Users.module.css","utils/validators/validators.ts","components/Sidebar/Friends/Friends.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","api/profile-api.ts","redux/profile-reducer.ts"],"names":["ResultCodeEnum","ResultCodeForCaptchaEnum","instance","axios","create","withCredentials","baseURL","headers","initialState","dialogs","id","name","messages","message","actions","sendMessage","newMessageBody","type","dialogsReducer","state","action","body","module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","Input","createField","placeholder","validators","component","text","validate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","Music","Settings","Navbar","s","nav","item","to","activeClassName","active","Friend","src","alt","Friends","wrapper","header","content","Sidebar","sidebar","userAPI","currentPage","pageSize","get","res","data","userId","post","delete","users","totalUsersCount","isFetching","followingInProgress","count","usersReducer","map","u","followed","filter","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","paginator","onClick","p","index","cn","selectedPage","pageNumber","e","User","user","follow","unfollow","photos","small","userPhoto","disabled","some","status","Users","usersWrapper","getUsers","createSelector","userPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","pageTitle","Preloader","React","Component","compose","connect","dispatch","a","resultCode","page","items","totalCount","Header","logo","loginBlock","isAuth","login","logout","authAPI","email","password","rememberMe","captcha","securityAPI","captchaUrl","payload","checkAuthorised","meData","Success","getCaptchaUrl","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","CaptchaIsRequired","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","store","createStore","require","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunkMiddleware","__store__","ProfileContainer","lazy","DialogsContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","fallback","path","render","exact","AppContainer","promise","Promise","all","SocialNetworkApp","StrictMode","ReactDOM","document","getElementById","preloader","value","maxLengthCreator","maxLength","profileAPI","put","photoFile","FormData","append","profileData","posts","likesCount","profile","newPostText","addPostCreator","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","getUserProfile","getStatus","updateStatus","savePhoto","file","saveProfile","reject","newPost"],"mappings":"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","file":"static/js/main.e12a77dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.30a11b1f.jpg\";","import axios from \"axios\";\r\nimport { UserType } from '../types/type';\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '91cc1011-293a-4a6f-955d-371d85cc4175'\r\n  }\r\n});\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodeEnum> = {\r\n  data: D\r\n  messages: string\r\n  resultCode: RC\r\n}\r\n\r\nexport enum ResultCodeEnum {\r\n  Success = 0,\r\n  Error = 1,\r\n}\r\nexport enum ResultCodeForCaptchaEnum {\r\n  CaptchaIsRequired = 10\r\n}\r\n\r\nexport type getItemsType = {\r\n  items: Array<UserType>\r\n  totalCount: number\r\n  error: string | null\r\n}\r\n\r\n","import { InferActionsTypes } from './redux-store';\r\n\r\ntype DialogType = {\r\n  id: number\r\n  name: string\r\n}\r\ntype MessageType = {\r\n  id: number\r\n  message: string\r\n}\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Shyam Rupa' },\r\n    { id: 2, name: 'Vasliy' },\r\n    { id: 3, name: 'Uncle Gena' },\r\n    { id: 4, name: 'Валера' },\r\n    { id: 5, name: 'Иван Викторович' },\r\n  ] as Array<DialogType>,\r\n  messages: [\r\n    { id: 1, message: 'Hello' },\r\n    { id: 2, message: 'What\\' s up?' },\r\n    { id: 3, message: 'Merhaba' },\r\n    { id: 4, message: 'Namaste!' },\r\n    { id: 5, message: 'Hari-bol!' },\r\n  ] as Array<MessageType>,\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case 'sn/dialogs/SEND-MESSAGE': {\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: body }],\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  sendMessage: (newMessageBody: string) => ({ type: 'sn/dialogs/SEND-MESSAGE', newMessageBody } as const)\r\n};\r\n\r\nexport default dialogsReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2Z7A9\",\"item\":\"Sidebar_item__3js7J\",\"active\":\"Sidebar_active__7cFzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__2I8qH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3QaUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3CEd7\",\"item\":\"Navbar_item__2UnZK\",\"active\":\"Navbar_active__1lp_t\"};","import styles from './FormsControls.module.css'\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from \"redux-form\";\r\nimport { FieldValidatorType } from '../../../utils/validators/validators';\r\nimport React from 'react';\r\n\r\ntype FormControlPropsType = {\r\n  meta: WrappedFieldMetaProps\r\n};\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError && styles.error)}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string,\r\n                            name: FormKeysType,\r\n                            validators: Array<FieldValidatorType>,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {},\r\n                            text = '') {\r\n    return <div>\r\n      <Field placeholder={placeholder} name={name}\r\n             validate={validators}\r\n             component={component}\r\n             {...props}\r\n      /> {text}\r\n    </div>\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","const Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","const Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import s from './Friend.module.css';\r\n\r\nconst Friend = () => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://hypeava.ru/uploads/posts/2018-05/1527186681_1.jpg\" alt=\"Ava\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friend;","import s from './Friends.module.css';\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.header}>\r\n        Friends:\r\n      </div>\r\n      <div className={s.content}>\r\n        <Friend/>\r\n        <Friend/>\r\n        <Friend/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends;","import s from './Sidebar.module.css';\r\nimport Navbar from \"./Nav/Navbar\";\r\nimport Friends from \"./Friends/Friends\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className={s.sidebar}>\r\n      <Navbar/>\r\n      <Friends/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import { getItemsType, APIResponseType, instance } from './api';\r\n\r\nexport const userAPI = {\r\n\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get<getItemsType>(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(res => res.data);\r\n  },\r\n  followUser(userId: number) {\r\n    return instance.post<APIResponseType>(`follow/${userId}`)\r\n      .then(res => res.data);\r\n  },\r\n  unfollowUser(userId: number) {\r\n    return instance.delete(`follow/${userId}`)\r\n      .then(res => res.data) as Promise<APIResponseType>;\r\n  }\r\n};","import { UserType } from '../types/type';\r\nimport { BaseThunkType, InferActionsTypes } from './redux-store';\r\nimport { userAPI } from '../api/users-api';\r\n\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>\r\n};\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'sn/users/FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n\r\n    case 'sn/users/UNFOLLOW':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n\r\n    case 'sn/users/SET_USERS':\r\n      return { ...state, users: action.users }\r\n\r\n    case 'sn/users/SET_CURRENT_PAGE':\r\n      return { ...state, currentPage: action.currentPage }\r\n\r\n    case 'sn/users/SET_TOTAL_USERS_COUNT':\r\n      return { ...state, totalUsersCount: action.count }\r\n\r\n    case 'sn/users/TOGGLE_IS_FETCHING':\r\n      return { ...state, isFetching: action.isFetching }\r\n\r\n    case 'sn/users/TOGGLE_FOLLOWING_IN_PROGRESS':\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  followSuccess: (userId: number) => ({ type: 'sn/users/FOLLOW', userId } as const),\r\n  unfollowSuccess: (userId: number) => ({ type: 'sn/users/UNFOLLOW', userId } as const),\r\n  setUsers: (users: Array<UserType>) => ({ type: 'sn/users/SET_USERS', users } as const),\r\n  setCurrentPage: (currentPage: number) => ({\r\n    type: 'sn/users/SET_CURRENT_PAGE',\r\n    currentPage\r\n  } as const),\r\n  setTotalUsersCount: (totalUsersCount: number) => ({\r\n    type: 'sn/users/SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount\r\n  } as const),\r\n  toggleIsFetching: (isFetching: boolean) => ({\r\n    type: 'sn/users/TOGGLE_IS_FETCHING',\r\n    isFetching: isFetching\r\n  } as const),\r\n  toggleFollowingInProgress: (isFetching: boolean, userId: number) => ({\r\n    type: 'sn/users/TOGGLE_FOLLOWING_IN_PROGRESS',\r\n    isFetching: isFetching,\r\n    userId\r\n  } as const)\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n  return async (dispatch) => {\r\n\r\n    dispatch(actions.setCurrentPage(page));\r\n    dispatch(actions.toggleIsFetching(true));\r\n\r\n    let data = await userAPI.getUsers(page, pageSize);\r\n    dispatch(actions.toggleIsFetching(false));\r\n    dispatch(actions.setUsers(data.items));\r\n    dispatch(actions.setTotalUsersCount(data.totalCount));\r\n  }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.toggleFollowingInProgress(true, userId));\r\n\r\n    let data = await userAPI.followUser(userId)\r\n    if (data.resultCode === 0) {\r\n      dispatch(actions.followSuccess(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingInProgress(false, userId));\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.toggleFollowingInProgress(true, userId));\r\n\r\n    let data = await userAPI.unfollowUser(userId)\r\n    if (data.resultCode === 0) {\r\n      dispatch(actions.unfollowSuccess(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingInProgress(false, userId));\r\n  }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;","import styles from './Paginator.module.css';\r\nimport React from 'react';\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  currentPage: number\r\n}\r\nconst Paginator: React.FC<PropsType> = ({\r\n                                          totalUsersCount,\r\n                                          pageSize,\r\n                                          onPageChanged,\r\n                                          currentPage\r\n                                        }) => {\r\n\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n  let pages: Array<number> = [];\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  return <div className={styles.paginator}>\r\n\r\n    <span onClick={() => {\r\n      onPageChanged(1)\r\n    }}>First </span>\r\n\r\n    <span onClick={() => {\r\n      if (currentPage > 1) {\r\n        onPageChanged(currentPage - 1);\r\n      }\r\n    }}>Prev. </span>\r\n\r\n    {pages.map((p, index) => {\r\n      if ((currentPage - p) < 2 && (p - currentPage) < 2) {\r\n        // return <span key={index} className={props.currentPage === p ? styles.selectedPage : undefined}\r\n        return <span key={index} className={cn({\r\n          [styles.selectedPage]: currentPage === p\r\n        }, styles.pageNumber)}\r\n                     onClick={(e) => {\r\n                       onPageChanged(p)\r\n                     }}>{p + ' '}\r\n          </span>\r\n      }\r\n    })}\r\n    <span onClick={() => {\r\n      if (currentPage < pagesCount) {\r\n        onPageChanged(currentPage + 1);\r\n      }\r\n\r\n    }}>Next </span>\r\n    <span onClick={() => {\r\n      onPageChanged(pagesCount);\r\n    }}>Last</span>\r\n  </div>\r\n}\r\n\r\nexport default Paginator;","import styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n\r\n    return (\r\n        <div>\r\n          <span>\r\n            <div>\r\n              <NavLink to={'/profile/' + user.id}>\r\n                  <img src={user.photos.small || userPhoto} className={styles.userPhoto}\r\n                       alt=\"Some img\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n              {user.followed\r\n                  ? <button disabled={followingInProgress\r\n                      .some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>\r\n                      Unfollow</button>\r\n                  : <button disabled={followingInProgress\r\n                      .some(id => id === user.id)} onClick={() => {\r\n                      follow(user.id);\r\n                  }}>\r\n                      Follow</button>}\r\n            </div>\r\n          </span>\r\n            <span>\r\n            <span>\r\n              <div>\r\n                {user.name}\r\n              </div>\r\n              <div>\r\n                {user.status}\r\n              </div>\r\n            </span>\r\n            <span>\r\n              <div>{\"u.location.country\"}</div>\r\n              <div>{\"u.location.city\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import styles from './Users.module.css';\r\nimport React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\nimport { UserType } from '../../types/type';\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  users: Array<UserType>\r\n\r\n  onPageChanged: (pageNumber: number) => void\r\n  followingInProgress: Array<number>\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = ({\r\n                                    onPageChanged,\r\n                                    totalUsersCount,\r\n                                    pageSize,\r\n                                    currentPage,\r\n                                    users,\r\n                                    ...props\r\n                                  }) => {\r\n\r\n  return <div className={styles.wrapper}>\r\n    <Paginator onPageChanged={onPageChanged}\r\n               totalUsersCount={totalUsersCount}\r\n               pageSize={pageSize}\r\n               currentPage={currentPage}/>\r\n    <div className={styles.usersWrapper}>\r\n      {\r\n        users.map(u => <User key={u.id}\r\n                                   user={u}\r\n                                   followingInProgress={props.followingInProgress}\r\n                                   unfollow={props.unfollow}\r\n                                   follow={props.follow}/>\r\n        )\r\n      }\r\n    </div>\r\n    <Paginator onPageChanged={onPageChanged}\r\n               totalUsersCount={totalUsersCount}\r\n               pageSize={pageSize}\r\n               currentPage={currentPage}/>\r\n  </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from 'reselect';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n  return state.userPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.userPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.userPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.userPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.userPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.userPage.followingInProgress;\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  follow,\r\n  requestUsers,\r\n  unfollow,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount, getUsers,\r\n} from '../../redux/users-selectors';\r\nimport { UserType } from '../../types/type';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n  currentPage: number\r\n  pageSize: number\r\n  isFetching: boolean\r\n  totalUsersCount: number\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n  pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    const { pageSize } = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      <h2>{this.props.pageTitle}</h2>\r\n      {this.props.isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             follow={this.props.follow}\r\n             unfollow={this.props.unfollow}\r\n             followingInProgress={this.props.followingInProgress}/>\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps,{\r\n    follow, unfollow, getUsers: requestUsers\r\n    })\r\n)(UsersContainer)","export default __webpack_public_path__ + \"static/media/logo.a65ceb6c.png\";","import s from './Header.module.css';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <NavLink to={'/'}><img src={logo} alt='Logo'/></NavLink>\r\n      <div className={s.loginBlock}>\r\n        { props.isAuth\r\n          ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { instance, APIResponseType, ResultCodeEnum, ResultCodeForCaptchaEnum } from './api';\r\n\r\ntype MeResponseDataType = {\r\n  id: number\r\n  email: string\r\n  login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n};\r\n\r\nexport const authAPI = {\r\n\r\n  me() {\r\n    return instance.get<APIResponseType<MeResponseDataType>>('auth/me')\r\n      .then(res => res.data);\r\n  },\r\n  login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n    return instance.post<APIResponseType<LoginResponseDataType, ResultCodeEnum | ResultCodeForCaptchaEnum>>('auth/login', { email, password, rememberMe, captcha })\r\n      .then(res => res.data);\r\n  },\r\n  logout() {\r\n    return instance.delete('auth/login');\r\n  }\r\n};","import { instance } from './api';\r\n\r\ntype getCaptchaUrlResponseType = {\r\n  url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance.get<getCaptchaUrlResponseType>('security/get-captcha-url').then(res => res.data);\r\n  }\r\n};","import { ResultCodeEnum, ResultCodeForCaptchaEnum } from '../api/api';\r\nimport { FormAction, stopSubmit } from 'redux-form';\r\nimport { BaseThunkType, InferActionsTypes } from './redux-store';\r\nimport { authAPI } from '../api/auth-api';\r\nimport { securityAPI } from '../api/security-api';\r\n\r\nconst initialState = {\r\n  id: null as number | null,\r\n  login: null as string | null,\r\n  email: null as string | null,\r\n  isAuth: false,\r\n  isFetching: false,\r\n  captchaUrl: null as string | null\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'sn/auth/SET_AUTH_USER_DATA':\r\n    case 'sn/auth/GET_CAPTCHA_URL_SUCCESS':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setAuthUserData: (id: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\r\n    type: 'sn/auth/SET_AUTH_USER_DATA', payload: { id, login, email, isAuth }\r\n  } as const),\r\n  getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n    type: 'sn/auth/GET_CAPTCHA_URL_SUCCESS', payload: { captchaUrl }\r\n  } as const)\r\n};\r\n\r\nexport const checkAuthorised = (): ThunkType => async (dispatch) => {\r\n  let meData = await authAPI.me();\r\n\r\n  if (meData.resultCode === ResultCodeEnum.Success) {\r\n    let { id, login, email } = meData.data;\r\n    dispatch(actions.setAuthUserData(id, login, email, true));\r\n  }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n  const data = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n  if (data.resultCode === ResultCodeEnum.Success) {\r\n    dispatch(checkAuthorised());\r\n  } else {\r\n    if (data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    let message = data.messages.length > 0 ? data.messages : 'Some error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n  const data = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = data.url;\r\n  dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === ResultCodeEnum.Success) {\r\n    dispatch(actions.setAuthUserData(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>;","import Header from \"./Header\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import style from '../common/FormsContrls/FormsControls.module.css'\r\nimport s from './Login.module.css'\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { createField, Input } from \"../common/FormsContrls/FormsControls\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport React from 'react';\r\n\r\ntype LoginFormOwnProps = {\r\n  captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType,\r\n  LoginFormOwnProps> & LoginFormOwnProps> = ({ handleSubmit, error, captchaUrl }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>{createField<LoginFormValuesTypeKeys>('Email',\r\n          'email', [required], Input)}</div>\r\n        <div>{createField<LoginFormValuesTypeKeys>('Пароль',\r\n          'password', [required], Input, { type: 'password' })}</div>\r\n        <div>{createField<LoginFormValuesTypeKeys>('Пароль',\r\n          'rememberMe', [], Input, { type: 'checkbox' })}</div>\r\n        {error && <span className={style.formSummaryError}>{error}</span>}\r\n\r\n        <div>\r\n          <button>Войти</button>\r\n        </div>\r\n        {captchaUrl &&\r\n        <div>\r\n          <div>Введите символы с картинки</div>\r\n          <img src={captchaUrl} alt={'captcha'}/>\r\n          <div>{createField<LoginFormValuesTypeKeys>('Введите символы', 'captcha', [required], Input)}\r\n            {/*<Field component={Input} name='captcha' placeholder='Введите символы' validate={required}/>*/}\r\n          </div>\r\n        </div>\r\n        }\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({ form: 'login' })(LoginForm)\r\n\r\ntype MapStatePropsType = {\r\n  captchaUrl: string | null\r\n  isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\ntype LoginFormValuesType = {\r\n  captcha: string\r\n  rememberMe: boolean\r\n  email: string\r\n  password: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>;\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n  const onSubmit = (formData: LoginFormValuesType) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return <div className={s.wrapper}>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import { checkAuthorised } from './auth-reducer';\r\nimport { BaseThunkType, InferActionsTypes } from './redux-store';\r\n\r\nconst initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'sn/app/INITIALIZING_SUCCESS':\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  initializingSuccess: () => ({ type: 'sn/app/INITIALIZING_SUCCESS' } as const)\r\n}\r\n\r\nexport const initializeApp = (): ThunkType => async (dispatch) => {\r\n  let promise = dispatch(checkAuthorised());\r\n\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(actions.initializingSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;","const initialState = {};\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { Action, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\nconst { createStore } = require('redux');\r\n\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  userPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never;\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import './App.css';\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport React, { Component, Suspense } from \"react\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends Component {\r\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n    alert('Произошла ошибка!');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Sidebar/>\r\n        <div className='app-wrapper-content'>\r\n          {/*<Switch>*/}\r\n          <Suspense fallback={<Preloader />}>\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer /> } />\r\n            <Route path='/dialogs' render={() => <DialogsContainer />}/>\r\n          </Suspense>\r\n          <Route exact path='/' render={() => <Redirect to={'/profile'} />} />\r\n          <Route path='/users' render={() => <UsersContainer pageTitle={'My social network'} />} />\r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/music' render={() => <Music />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n          <Route path='/login' render={() => <LoginPage />} />\r\n          {/*<Route path='*' render={() => <div>404 - PAGE NOT FOUND</div>} />*/}\r\n          {/*</Switch>*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\n\r\nconst SocialNetworkApp = () => {\r\n  return <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <AppContainer/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>\r\n}\r\n\r\nexport default SocialNetworkApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport SocialNetworkApp from \"./App\";\r\n\r\nReactDOM.render(<SocialNetworkApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3K4IF\",\"error\":\"FormsControls_error__2Zrga\",\"formSummaryError\":\"FormsControls_formSummaryError__1_J3E\"};","export default __webpack_public_path__ + \"static/media/preloader.d5566c27.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n  return <img src={preloader}/>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2DnJU\",\"wrapper\":\"Users_wrapper__1qq-B\",\"usersWrapper\":\"Users_usersWrapper__NmYSr\"};","export type FieldValidatorType = (value: string) => string | undefined;\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__PUQdO\",\"content\":\"Friends_content__2FhxB\",\"header\":\"Friends_header__1MXzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2XwMp\",\"pageNumber\":\"Paginator_pageNumber__34BUw\",\"paginator\":\"Paginator_paginator__2yKf6\",\"content\":\"Paginator_content__3yAap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__7AGEp\",\"loginBlock\":\"Header_loginBlock__1r6zJ\"};","import { PhotosType, ProfileType } from '../types/type';\r\nimport { instance, APIResponseType } from './api';\r\n\r\ntype SavePhotoResponseDataType = {\r\n  photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n  getUserProfile(userId: number) {\r\n    return instance.get<ProfileType>(`profile/` + userId).then(res => res.data);\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance.get<string>(`profile/status/` + userId).then(res => res.data);\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance.put<APIResponseType>(`profile/status/`, { status: status }).then(res => res.data);\r\n  },\r\n  savePhoto(photoFile: File) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile)\r\n\r\n    return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo/`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }).then(res => res.data);\r\n  },\r\n  saveProfile(profileData: ProfileType) {\r\n    return instance.put<APIResponseType>('/profile', profileData).then(res => res.data)\r\n  }\r\n\r\n};","import { FormAction, stopSubmit } from 'redux-form';\r\nimport { PhotosType, PostType, ProfileType } from '../types/type';\r\nimport { BaseThunkType, InferActionsTypes } from './redux-store';\r\nimport { profileAPI } from '../api/profile-api';\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Привет, мир!', likesCount: 5 },\r\n    { id: 2, message: 'Ом намо бхагавате васудевайа!', likesCount: 108 },\r\n    { id: 3, message: 'Какой-нибудь еще пост', likesCount: 1108 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '',\r\n  newPostText: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'sn/profile/ADD-POST':\r\n      let newPost = {\r\n        id: 4,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: ''\r\n      };\r\n    case 'sn/profile/SET_STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case 'sn/profile/SET_USER_PROFILE':\r\n      return { ...state, profile: action.profile }\r\n\r\n    case 'sn/profile/DELETE_POST':\r\n      return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n\r\n    case 'sn/profile/SAVE_PHOTO_SUCCESS':\r\n      return { ...state, profile: { ...state.profile, photos: action.photos } as ProfileType }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  addPostCreator: (newPostText: string) => ({ type: 'sn/profile/ADD-POST', newPostText } as const),\r\n  setUserProfile: (profile: ProfileType) => ({ type: 'sn/profile/SET_USER_PROFILE', profile } as const),\r\n  setStatus: (status: string) => ({ type: 'sn/profile/SET_STATUS', status } as const),\r\n  deletePost: (postId: number) => ({ type: 'sn/profile/DELETE_POST', postId } as const),\r\n  savePhotoSuccess: (photos: PhotosType) => ({ type: 'sn/profile/SAVE_PHOTO_SUCCESS', photos } as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n  const data = await profileAPI.getUserProfile(userId);\r\n  dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n  const data = await profileAPI.getStatus(userId);\r\n  dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    const data = await profileAPI.updateStatus(status);\r\n\r\n    if (data.resultCode === 0) {\r\n      dispatch(actions.setStatus(status));\r\n    }\r\n  } catch (error) {\r\n    alert(`Произошла ошибка:\\n\r\n        ${error}`)\r\n  }\r\n\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n  const data = await profileAPI.savePhoto(file);\r\n\r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.savePhotoSuccess(data.data.photos));\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch) => {\r\n  const data = await profileAPI.saveProfile(profile);\r\n  if (data.resultCode === 0) {\r\n    dispatch(getUserProfile(profile.userId));\r\n  } else {\r\n    dispatch(stopSubmit('edit-profile', { _error: data.messages[0] }));\r\n    return Promise.reject(data.messages[0]);\r\n  }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>;"],"sourceRoot":""}