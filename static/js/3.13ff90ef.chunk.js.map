{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileDataReduxForm","reduxForm","form","profile","handleSubmit","onSubmit","createField","Input","type","Textarea","keys","contacts","map","key","className","s","contact","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","onClick","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","initialValues","formData","Post","c","item","alt","message","likesCount","MyPosts","React","memo","postsElements","profilePage","posts","p","id","postsBlock","MyPostReduxForm","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizerUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.13ff90ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3lTQK\",\"mainPhoto\":\"ProfileInfo_mainPhoto__c2jC1\",\"contact\":\"ProfileInfo_contact__HI_op\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__RkeIZ\",\"posts\":\"MyPosts_posts__VqHTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__F-bai\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n     return (\r\n      <div>\r\n        { !editMode &&\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || 'Напишите что-нибудь'}</span>\r\n          </div>\r\n        }\r\n        { editMode &&\r\n          <div>\r\n            <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                   value={status}/>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import {createField, Input, Textarea} from \"../../common/FormsContrls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <strong>Имя</strong> {createField('Имя', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                Ищу работу: {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div>\r\n                Мои профессионалные навыки:\r\n                    {createField('Мои профессионалные навыки', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                Обо мне: {createField('Обо мне', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <h3>Контакты</h3>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                            return <div className={s.contact}>{key}: {createField(key, 'contacts.' + key, [], Input)}</div>\r\n                    // <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n            <div><button>Сохранить</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport {useState} from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div><img src={profile.photos.large || userPhoto} className={s.mainPhoto}/></div>\r\n                <div>\r\n                    {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                <div><p>Статус:<ProfileStatusWithHooks status={status} updateStatus={updateStatus}/></p></div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>{profile.fullName}</h3>\r\n            </div>\r\n            <div>\r\n                <p>Обо мне: {profile.aboutMe}</p>\r\n            </div>\r\n            <div>\r\n                <p>Ищу работу: {profile.lookingForAJob ? 'Да' : 'Нет'}</p>\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <p>Мои профессионалные\r\n                    навыки: {profile.lookingForAJobDescription && profile.lookingForAJobDescription}</p>\r\n            </div>}\r\n            <div>\r\n                <h3>Контакты</h3>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Редактировать</button></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>{contactValue && <div>{contactTitle}: {contactValue}</div>}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import c from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={c.item}>\r\n      <img src=\"https://hypeava.ru/uploads/posts/2018-05/1527186681_1.jpg\" alt=\"Ava\"/>\r\n      {props.message}\r\n      <div>\r\n        <span>{props.likesCount} like</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsContrls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  const postsElements = props.profilePage.posts.map(p => <Post message={p.message} key={p.id}\r\n                                                               likesCount={p.likesCount}/>);\r\n\r\n  const addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostReduxForm onSubmit={addNewPost}/>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' placeholder='Как у вас дела?'\r\n        validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Добавить запись</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(MyPostForm)\r\n\r\nexport default MyPosts;","import {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n                   isOwner={props.isOwner}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   saveProfile={props.saveProfile}\r\n                   updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizerUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizerUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}